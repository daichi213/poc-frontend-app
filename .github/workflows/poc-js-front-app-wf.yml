name: poc-js-front-app-wf

on:
  workflow_dispatch:
  # push:
  #   branches: [ "main" ]
  # pull_request:
  #   branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: node:19-buster-slim
      volumes:
        - ${{ github.workspace }}:${{ github.workspace }}
      env:
        NODE_ENV: development
      options: --cpus 2
    steps:
      - uses: actions/checkout@v3

      - uses: actions/checkout@v3
        with:
          repository: 'wealsoft/pipeline-making'
          token: ${{ secrets.PAT_PIPELINE_MAKING_REPO }}
          path: './pipeline-making'
          ref: "feature/ozaki_poc"

      - name: SetEnv
        env:
          PR_BRANCH_NAME: ${{ github.head_ref }}
        shell: bash
        run: |
          echo build_tag=${PR_BRANCH_NAME#*/} >> $GITHUB_ENV

      - name: SetConfigEnv
        uses: mikefarah/yq@master
        with:
          cmd: |
            CONFIG_COMMON_LIST=$(yq '.common' ./.github/config.yml | sed 's/\:\ /\=/')
            for config_common in $CONFIG_COMMON_LIST
            do
              echo "$config_common" >> $GITHUB_ENV
            done

      - name: Cache
        uses: actions/cache@v3.0.11
        with:
          path: "**/node_modules"
          key: node-modules-${{ github.sha }}
          restore-keys: node-modules-

      - name: Install dependencies
        run: sudo apt -y install libxml2-utils

      - name: Add Google Chrome repository
        run: |
          echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google-chrome.list
          wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -

      - name: Install Google Chrome
        run: |
          sudo apt update
          sudo apt install -y google-chrome-stable

      - name: Download and install Chrome Driver
        run: |
          chrome_v=$(google-chrome --version | cut -d " " -f 3 | cut -d "." -f 1)
          chrome_driver_list=`curl https://chromedriver.storage.googleapis.com/ > /tmp/chrome.v`
          chrome_chrome_ver_list=`xmllint --format /tmp/chrome.v | grep Key | grep ${chrome_v} | grep linux | cut -d">" -f2 | cut -d"/" -f1`
          chrome_driver_ver=`echo ${chrome_chrome_ver_list} | cut -d" " -f1`
          wget https://chromedriver.storage.googleapis.com/${chrome_driver_ver}/chromedriver_linux64.zip -P /tmp
          unzip /tmp/chromedriver_linux64.zip -d /usr/local/bin
          sudo chmod 755 /usr/local/bin/chromedriver
          rm -f /tmp/chromedriver_linux64.zip

      - name: App Src Build
        shell: bash
        run: |
            sh ${{ github.workspace }}/.github/build.sh

      - name: Unit Test
        shell: bash
        run: |
            sh ${{ github.workspace }}/.github/unit_test.sh

      - name: Integration Test
        shell: bash
        run: |
            sh ${{ github.workspace }}/.github/integration_test.sh

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: './sample_app'
          severity: 'CRITICAL'
          timeout: 5m
          vuln-type: library
          exit-code: 0
